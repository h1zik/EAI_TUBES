{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\PerbankanUI\\\\microservices-ui\\\\src\\\\components\\\\EditTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTransaction = ({\n  transactionId\n}) => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const {\n    auth\n  } = useContext(AuthContext);\n  const handleTransactionEdit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:5000/transactions/${transactionId}`, {\n        amount: parseFloat(amount)\n      }, {\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        }\n      });\n      alert('Transaction updated successfully');\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n      alert('Failed to update transaction');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleTransactionEdit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTransaction, \"RLGJFueDXgm416VQU1qFjDmMwIc=\");\n_c = EditTransaction;\nexport default EditTransaction;\nvar _c;\n$RefreshReg$(_c, \"EditTransaction\");","map":{"version":3,"names":["React","useState","useContext","axios","AuthContext","jsxDEV","_jsxDEV","EditTransaction","transactionId","_s","amount","setAmount","auth","handleTransactionEdit","e","preventDefault","put","parseFloat","headers","Authorization","token","alert","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/PerbankanUI/microservices-ui/src/components/EditTransaction.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nconst EditTransaction = ({ transactionId }) => {\r\n  const [amount, setAmount] = useState('');\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  const handleTransactionEdit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:5000/transactions/${transactionId}`, {\r\n        amount: parseFloat(amount)\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${auth.token}`\r\n        }\r\n      });\r\n      alert('Transaction updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating transaction:', error);\r\n      alert('Failed to update transaction');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleTransactionEdit}>\r\n      <div>\r\n        <label>New Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Update Transaction</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditTransaction;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEW;EAAK,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAExC,MAAMS,qBAAqB,GAAG,MAAOC,CAAC,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMZ,KAAK,CAACa,GAAG,CAAE,sCAAqCR,aAAc,EAAC,EAAE;QACrEE,MAAM,EAAEO,UAAU,CAACP,MAAM;MAC3B,CAAC,EAAE;QACDQ,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,IAAI,CAACQ,KAAM;QACtC;MACF,CAAC,CAAC;MACFC,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDD,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACEf,OAAA;IAAMkB,QAAQ,EAAEX,qBAAsB;IAAAY,QAAA,gBACpCnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BvB,OAAA;QACEwB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAErB,MAAO;QACdsB,QAAQ,EAAGlB,CAAC,IAAKH,SAAS,CAACG,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;QAC3CG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEX,CAAC;AAACpB,EAAA,CAnCIF,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}